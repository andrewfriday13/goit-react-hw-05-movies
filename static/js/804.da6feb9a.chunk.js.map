{"version":3,"file":"static/js/804.da6feb9a.chunk.js","mappings":"iOAyDA,UApDqB,WAAO,IAAD,IAEvB,GAAgCA,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAMC,EAAN,KAAgBC,EAAhB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,SAGPE,EAAAA,EAAAA,YAAU,WACNC,EAASH,GAASI,MAAK,SAAAC,GAAQ,OAAIN,EAAaM,EAAjB,IAC9BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,IACTG,SACJ,GAAC,CAACV,IAEP,IAAMG,EAAQ,mCAAG,WAAOQ,GAAP,6EACG,mCADH,wCAGaC,EAAAA,EAAAA,IAAA,UAHb,+BAGa,kBAA+BD,EAA/B,oBAFV,mCAEU,oBAHb,cAGPE,EAHO,yBAIJA,EAAYC,MAJR,2CAAH,sDAOPC,EAAqEjB,EAArEiB,SAAUC,EAA2DlB,EAA3DkB,YAAaC,EAA8CnB,EAA9CmB,eAAgBC,EAA8BpB,EAA9BoB,aAAcC,EAAgBrB,EAAhBqB,aACtDC,EAAM,0CAAsCJ,GAI5CK,EAAa,qBADFC,EAAAA,EAAAA,MACcC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACxCC,GAAWC,EAAAA,EAAAA,QAAOL,GAClBM,GAAUT,EAAa,GAAG,KAAKU,QAAQ,GACvCC,EAAUV,EACZ,OAAO,4BACH,UAAC,KAAD,CAAMW,GAAIL,EAASM,QAAnB,WAA4B,mBAAQC,KAAK,SAAb,sBAA5B,QACA,0BAAKf,EAAL,KAAuBY,EAAvB,QACD,2BACmB,OAAhBb,GAED,gBAAKiB,IAbG,yFAaYC,IAAI,GAAIC,MAAM,SAElC,gBAAKF,IAAKb,EAAQc,IAAI,GAAIC,MAAM,SAEjC,oCAAYR,EAAZ,QACA,mBACA,uBAAIZ,KACJ,2BACI,+BAAK,SAAC,KAAD,CAAMe,GAAG,OAAT,sBACL,+BAAK,SAAC,KAAD,CAAMA,GAAG,UAAT,+BAGT,SAAC,KAAD,MAGP,C","sources":["pages/movieDetails.jsx"],"sourcesContent":["import axios from \"axios\"\nimport { useEffect, useRef, useState, } from \"react\"\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\"\n\n\nconst MovieDetails = () => {\n\n    const[oneMovie, setOneMoivie] = useState({})\n    const {movieId} = useParams()\n\n    \n    useEffect(()=>{\n        getMovie(movieId).then(response => setOneMoivie(response) )\n        .catch(err => console.log(err))\n        .finally()\n    },[movieId])\n\nconst getMovie = async (moviesId) => {\n    const API_KEY = '7140726491bb46cefd66d6c99674ef87'\n    const BASE_URL = `https://api.themoviedb.org/3`\n    const movieDetail = await axios.get(`${BASE_URL}/movie/${moviesId}?api_key=${API_KEY}&language=en-US`)\n    return   movieDetail.data\n}\n\nconst {overview, poster_path, original_title, vote_average, release_date} = oneMovie\nconst imgUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`\nconst emptyImg = 'https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png?20170513175923'\n\nconst location = useLocation();\nconst locationState = location.state?.from ?? '/movies'\nconst backLink = useRef(locationState)\nconst rating = (vote_average/10*100).toFixed(0)\nconst release = release_date\n    return <div>\n        <Link to={backLink.current}><button type=\"button\"> Go back</button> </Link>\n        <h1>{original_title} ({release})</h1>\n       <div>\n        { poster_path === null \n        ? \n        (<img src={emptyImg} alt=\"\"  width='160'/>)\n        :\n        (<img src={imgUrl} alt=\"\"  width='160'/>)\n        }      \n        <p>Rating: {rating}%</p>\n        <ul></ul>\n        <p>{overview}</p>\n        <ul>\n            <li> <Link to=\"cats\">Cats</Link></li>\n            <li> <Link to=\"reviews\">Reviews</Link></li>\n        </ul>\n       </div>\n        <Outlet/>\n        </div>\n    \n}\n\n\nexport default MovieDetails\n\n\n"],"names":["useState","oneMovie","setOneMoivie","movieId","useParams","useEffect","getMovie","then","response","catch","err","console","log","finally","moviesId","axios","movieDetail","data","overview","poster_path","original_title","vote_average","release_date","imgUrl","locationState","useLocation","state","from","backLink","useRef","rating","toFixed","release","to","current","type","src","alt","width"],"sourceRoot":""}