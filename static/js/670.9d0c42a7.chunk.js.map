{"version":3,"file":"static/js/670.9d0c42a7.chunk.js","mappings":"gRAgBA,EAhBmB,SAAC,GAA0C,IAAzCA,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,OAC7C,OAAO,iBAAMC,SAAUH,EAAhB,UACP,8BACI,kBACAE,OAAQA,EACPE,KAAK,OACLC,SAAUJ,EACVK,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEb,mBAAQJ,KAAK,SAAb,yBAGP,ECsDA,EA9Da,WAAK,IAAD,EAElB,GAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAMC,EAAN,KAAaC,EAAb,KACA,GAA+BF,EAAAA,EAAAA,UAAS,IAAxC,eAAMG,EAAN,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAMK,EAAN,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAiCT,EAAAA,EAAAA,WAAS,GAA1C,eAAOU,EAAP,KAAkBC,EAAlB,KAEMlB,EAAM,UAAIe,EAAaI,IAAI,kBAArB,QAAmC,IAG/CC,EAAAA,EAAAA,YAAU,WACNC,EAASX,GACRY,MAAK,gBAAEC,EAAF,EAAEA,QAAF,OAAiBd,GAAU,OAAKc,GAAhC,IACLC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,QAApB,IACTC,SAGJ,GAAE,CAAEjB,IAEH,IAAMS,EAAQ,mCAAG,WAAOrB,GAAP,6EACC,mCADD,SAGf8B,EAAAA,EAAAA,IAAA,4DAFgB,mCAEhB,kBAAgF9B,IAHjE,cAETqB,EAFS,yBAIRA,EAASU,MAJD,2CAAH,sDAsBVC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,4BACF,SAAC,EAAD,CACAjC,OAAQA,EACPF,aAbe,SAAAoC,GACjBA,EAAMC,iBACNd,EAASa,EAAME,QACfvB,GAAcD,GACdyB,SAASC,cAAc,SAASC,MAAQ,GACxCrB,GAAa,EAChB,EAQKnB,aArBe,SAAC,GAAc,IAAbqC,EAAY,EAAZA,OACXG,EAAQH,EAARG,MACR,GAAa,KAAVA,EAAc,OAAOvB,EAAgB,CAAC,GACzCL,EAAY4B,GACZvB,EAAgB,CAAEhB,OAASoC,EAAOG,OACrC,IAmBUtB,GAA8B,IAAjBT,EAAMgC,SAAiB,wDACxC,wBACEhC,EAAMiC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACV,yBACG,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMb,GAAWc,GAAE,kBAAaJ,GAA9C,SAAqDC,KAD/CD,EADC,OAKZ,SAAC,KAAD,MAEL,C","sources":["components/formSearch/formSearch.jsx","pages/movies.jsx"],"sourcesContent":["const FormSearch = ({handleSabmit, handleChange, search}) => {\n    return <form onSubmit={handleSabmit}>\n    <label>\n        <input \n        search={search}\n         type=\"text\"\n         onChange={handleChange}\n         autoComplete=\"off\"\n         autoFocus\n         placeholder=\"Search movies\"\n        />\n        <button type=\"submit\"> search</button>\n    </label>\n   </form>\n}\n\nexport default FormSearch","import { useState, useEffect } from \"react\"\nimport axios from 'axios';\nimport { Link, Outlet, useLocation, useSearchParams } from \"react-router-dom\";\nimport FormSearch from \"components/formSearch/formSearch\";\n\n\nconst Movies =()=>{\n\nconst[films, setFlilms] = useState([])\nconst[nameFilm, setNameFilm] = useState('')\nconst[sendFetch, setSendFetch] =useState(false)\nconst [searchParams, setSearchParams] = useSearchParams();\nconst[ emptyList, setEmptyList] =useState(false) \n\nconst search  = searchParams.get(\"search \") ?? \"\";\n\n\nuseEffect(() => {\n    getFilms(nameFilm)\n    .then(({results}) =>   setFlilms([ ...results]))\n    .catch(err => console.log(err.message))\n    .finally()\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, [ sendFetch])\n\n  const getFilms = async (search) =>{ \n    const API_KEY = '7140726491bb46cefd66d6c99674ef87'\n    const getFilms = await \n    axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${search}`)\n    return getFilms.data \n}\n\nconst handleChange = ({target}) => {\n    const { value} =target\n    if(value === '') return setSearchParams({})\n    setNameFilm(value)\n    setSearchParams({ search : target.value })\n}\n\nconst handleSabmit = event =>{\n    event.preventDefault()\n    getFilms(event.target)\n    setSendFetch(!sendFetch)\n    document.querySelector('input').value = '';\n    setEmptyList(true)\n}\n\nconst location = useLocation()\n\nreturn <div>\n     <FormSearch\n     search={search }\n      handleSabmit={handleSabmit}\n      handleChange={handleChange}\n      />\n\n       {  (emptyList && films.length === 0 )&& <p>Please, change your request</p>}\n       <ul>\n        {films.map(({id, title}) =>\n         <li key={id}>\n            <Link state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n        </li>)}\n       </ul>\n       <Outlet/>\n    </div>\n }\n\n export default Movies\n\n\n"],"names":["handleSabmit","handleChange","search","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","useState","films","setFlilms","nameFilm","setNameFilm","sendFetch","setSendFetch","useSearchParams","searchParams","setSearchParams","emptyList","setEmptyList","get","useEffect","getFilms","then","results","catch","err","console","log","message","finally","axios","data","location","useLocation","event","preventDefault","target","document","querySelector","value","length","map","id","title","state","from","to"],"sourceRoot":""}